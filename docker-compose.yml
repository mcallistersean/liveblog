version: '2.1'


services:

  elastic:
    image: elasticsearch:1-alpine

  mongodb:
    image: mongo:latest
    volumes:
      - ./data/mongodb:/data/db:rw


  redis:
    image: redis:2.8
    volumes:
    - ./data/redis:/data:rw

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    image: nginx
    depends_on:
      - superdesk
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80

#  frontend:
#    build:
#      context: ./client/
#      dockerfile: Dockerfile-dev
#
#    image: liveblog-client:latest

  superdesk:
    build:
      context: .
    image: liveblog:latest
    depends_on:
      - redis
      - mongodb
    environment:
#      AMAZON_ACCESS_KEY_ID: null
#      AMAZON_CONTAINER_NAME: null
#      AMAZON_REGION: null
#      AMAZON_SECRET_ACCESS_KEY: null
      CELERY_BROKER_URL: redis://redis:6379/1
      ELASTICSEARCH_INDEX: null
      ELASTICSEARCH_URL: http://elastic:9200
      LEGAL_ARCHIVE_URI: mongodb://mongodb/test
#      LOG_SERVER_ADDRESS: logstash
#      LOG_SERVER_PORT: '5555'
#      MAIL_PASSWORD: pwd
#      MAIL_PORT: '25'
#      MAIL_SERVER: postfix
#      MAIL_USERNAME: user
#      MAIL_USE_SSL: "false"
#      MAIL_USE_TLS: "false"
      MONGO_URI: mongodb://mongodb/test
      PUBLICAPI_MONGO_URI: mongodb://mongodb/test
      REDIS_URL: redis://redis:6379/1
      REUTERS_PASSWORD: null
      REUTERS_USERNAME: null
      S3_THEMES_PREFIX: null
      SENTRY_DSN: null
      SUPERDESK_CLIENT_URL: http://localhost:8080
      SUPERDESK_TESTING: "True"
      SUPERDESK_URL: http://localhost:8080/api
      SUPERDESK_WS_URL: ws://localhost:8080/ws
      DEBUG: "True"
      # required for celery to start as root
      C_FORCE_ROOT: "True"

    volumes:
      - ./results/client/unit:/opt/superdesk/client/unit-test-results:rw
      - ./results/server/behave:/opt/superdesk/results-behave:rw
      - ./results/server/unit:/opt/superdesk/results-unit:rw

